Nome da tarefa: microshell
Arquivos esperados: microshell.c
Funções permitidas: malloc, free, write, close, fork, waitpid, signal, kill, exit, chdir, execve, dup, dup2, pipe, strcmp, strncmp
-------------------------------------------------- ------------------------------------

Escreva um programa que se comporte como se estivesse executando um comando shell
- A linha de comando a ser executada serão os argumentos deste programa
- O caminho do executável será absoluto ou relativo mas seu programa não deve construir um caminho (a partir da variável PATH por exemplo)
- Você deve implementar "|" e ";" como no bash
  - nunca tentaremos um "|" imediatamente seguido ou precedido por nada ou "|" ou ";"
- Seu programa deve implementar o comando interno cd apenas com um caminho como argumento (sem '-' ou sem parâmetros)
  - se cd tiver o número errado de argumentos, seu programa deverá imprimir em STDERR "error: cd: bad argument" seguido por um '\n'
  - se o cd falhar, seu programa deverá imprimir em STDERR "erro: cd: não é possível alterar o diretório para path_to_change" seguido por um '\n' com path_to_change substituído pelo argumento para cd
  - um comando cd nunca será imediatamente seguido ou precedido por um "|"
- Você não precisa gerenciar nenhum tipo de curinga (*, ~ etc...)
- Você não precisa gerenciar variáveis ​​de ambiente ($BLA ...)
- Se uma chamada de sistema, exceto execve e chdir, retornar um erro, seu programa deverá imprimir imediatamente "error: fatal" em STDERR seguido de '\n' e o programa deverá sair
- Se execve falhou você deve imprimir "error: can execute executable_that_failed" em STDERR seguido por um '\n' com executable_that_failed substituído pelo caminho do executável com falha (deve ser o primeiro argumento de execve)
- Seu programa deve ser capaz de gerenciar mais de centenas de "|" mesmo se limitarmos o número de "arquivos abertos" a menos de 30.

por exemplo, isso deve funcionar:
$>./microshell /bin/ls "|" /usr/bin/grep microshell ";" /bin/echo eu amo meu microshell
microconcha
eu amo minha microconcha
$>

Dicas:
Não esqueça de passar a variável de ambiente para execve

Dicas:
Não vaze descritores de arquivo!
_____________________________________________________________________________________________________________________________________________

Напишите программу, которая будет вести себя как выполнение команды оболочки
- Командной строкой для выполнения будут аргументы этой программы
- Deixe o programa configurado automaticamente ou desativado, sem que seu programa seja executado (por exemplo р, из переменной PATH)
- Вы должны реализовать " | "и"; " как в bash
- мы никогда не будем пробовать " | "сразу после или перед ничем или" | " или ";"
- Seu programa должна реализовывать встроенную команду cd только с путем в качестве аргумента (sem '-' ou sem parâmetro etrov)
- если cd имеет неправильный номер аргумента, seu programa должна напечатать в STDERR "error: cd: bad argument", za которым следует '\n'
- если cd não foi usado, seu programa foi adicionado ao STDERR "error: cd: can change directory to path_to_change", за которым следует '\n ' с path_to_change, замененным música para cd
- o comando cd никогда não é usado no comando "|"
- Вам не нужно управлять любыми типами подстановочных знаков ( * , ~ и т. д...)
- Não há necessidade de atualizar a configuração atual ($BLA ...)
- Если системный вызов, кроме execve e chdir, возвращает ошибку, seu programa должна немедленно напечатать "error: fatal" em STDERR, e o programa é exibido '\n' e o programa é exibido
- Se execve não for usado, você verá "erro: não é possível executar executável_that_failed" em STDERR, e coloque '\n' em executável_that_failed, mas não исполняемого файла (это должен быть первый аргумент execve)
- Seu programa está configurado para ser atualizado mais tarde "|", даже если мы ограничим количество "открытых файлов" cerca de 30.

Sugestões:
Não altere a configuração atual do execve

Sugestões:
Não insira as descrições dos arquivos!
