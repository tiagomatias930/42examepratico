Nome da tarefa: Flood_fill
Arquivos esperados: Flood_fill.c
Funções permitidas: -
-------------------------------------------------- ------------------------------

Escreva uma função que receba um char ** como um array bidimensional de char, um
t_point como as dimensões desta matriz e um t_point como ponto inicial.

A partir do t_point 'begin' fornecido, esta função preenche uma zona inteira
substituindo os caracteres internos pelo caractere 'F'. Uma zona é um grupo de
o mesmo caractere delimitado horizontalmente e verticalmente por outros caracteres
ou o limite da matriz.

A função Flood_fill não será preenchida diagonalmente.

A função Flood_fill será prototipada assim:
 void Flood_fill(char **tab, tamanho t_point, t_point start);

A estrutura t_point é prototipada assim: (coloque-a em Flood_fill.c)

 typedef estrutura s_point
 {
 interno x;
 interno;
 } ponto_t;

Example:

$> cat test.c
#include <stdlib.h>
#include <stdio.h>

char** make_area(char** zone, t_point size)
{
	char** new;

	new = malloc(sizeof(char*) * size.y);
	for (int i = 0; i < size.y; ++i)
	{
		new[i] = malloc(size.x + 1);
		for (int j = 0; j < size.x; ++j)
			new[i][j] = zone[i][j];
		new[i][size.x] = '\0';
	}

	return new;
}

int main(void)
{
	t_point size = {8, 5};
	char *zone[] = {
		"11111111",
		"10001001",
		"10010001",
		"10110001",
		"11100001",
	};

	char**  area = make_area(zone, size);
	for (int i = 0; i < size.y; ++i)
		printf("%s\n", area[i]);
	printf("\n");

	t_point begin = {7, 4};
	flood_fill(area, size, begin);
	for (int i = 0; i < size.y; ++i)
		printf("%s\n", area[i]);
	return (0);
}

$> gcc flood_fill.c test.c -o test; ./test
11111111
10001001
10010001
10110001
11100001

FFFFFFFF
F000F00F
F00F000F
F0FF000F
FFF0000F
$> 
